@model DreamPlanner_Main.Models.UserDefinedModels.Reservation

@{
    ViewBag.Title = "Create";
}

<div class="container">
    <div class="row margin-vert-30">
        <div class="col-md-6 col-md-offset-3 col-sm-offset-3">
    @using (Html.BeginForm("Create", "Reservations", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "signup-page", role = "form" }))
            {
        @Html.AntiForgeryToken()

        <div class="signup-header">
            <h2>Reserve your party</h2>
        </div>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.Label("FirstName")
                <input id="UserFirstName" class="form-control margin-bottom-20" type="text" readonly="readonly" />

                @Html.Label("LastName")
                <input id="UserLastName" class="form-control margin-bottom-20" type="text" readonly="readonly" />

                @Html.Label("Email")
                <input id="UserEmail" class="form-control margin-bottom-20" type="text" readonly="readonly" />


                @Html.Label("Which type of party you want?")
                @Html.DropDownList("PartyTypeId", null, htmlAttributes: new { @class = "form-control margin-bottom-20" })
                @Html.ValidationMessageFor(model => model.Theme.PartyTypeId, "", new { @class = "text-danger" })

                @Html.LabelFor(model => model.ThemeId)
                @Html.DropDownList("ThemeId", null, htmlAttributes: new { @class = "form-control margin-bottom-20" })
                @Html.ValidationMessageFor(model => model.ThemeId, "", new { @class = "text-danger" })

                @Html.LabelFor(model => model.HallId)
                @Html.DropDownList("HallId", null, htmlAttributes: new { @class = "form-control margin-bottom-20" })
                @Html.ValidationMessageFor(model => model.HallId, "", new { @class = "text-danger" })

                @Html.LabelFor(model => model.ReservationDate)
                @Html.EditorFor(model => model.ReservationDate, new { htmlAttributes = new { @class = "form-control margin-bottom-20 datepicker" } })
                @Html.ValidationMessageFor(model => model.ReservationDate, "", new { @class = "text-danger" })

                @Html.LabelFor(model => model.TotalRent)
                @*<input id="TotalRent" class="form-control margin-bottom-20" type="text" readonly="readonly" />*@
                @Html.EditorFor(model => model.TotalRent, new { htmlAttributes = new { @class = "form-control margin-bottom-20", @readonly = "readonly" } })


                <hr>

                <h4>@ViewBag.ReservationMesg</h4>

                <div class="row">
                    <div class="col-lg-8">
                    </div>
                    <div class="col-lg-4 text-right">
                        <button class="btn btn-primary" type="submit">Reserve</button>
                    </div>
                </div>

            }

        </div>
        <div id="calendar"> </div>

    </div>


</div>

<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

<script type="text/javascript">


    $(document).ready(function () {

        GetRentAndReservedDates();

        var disableddates = [""];

        $(".datepicker").datepicker({
            dateFormat: "mm/dd/yy",
            changeMonth: true,
            changeYear: true,
            yearRange: "-1:+5",
            //minDate: new Date(2017,11,13),
            //maxDate: new Date(2018, 02, 31),
            beforeShowDay: function (date) {

                var m = date.getMonth();
                var d = date.getDate();
                var y = date.getFullYear();

                // First convert the date in to the mm-dd-yyyy format
                // Take note that we will increment the month count by 1
                var currentdate = (m + 1) + '/' + d + '/' + y;

                // We will now check if the date belongs to disableddates array
                for (var i = 0; i < disableddates.length; i++) {

                    // Now check if the current date is in disabled dates array.
                    if ($.inArray(currentdate, disableddates) != -1) {
                        return [false];
                    }
                    else {
                        return [true];
                    }
                }

            }
        });

        //GetRentAndReservedDates();

        var json = "";
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetUserInformation", "Reservations")',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(json),
            success: function (data) {
                $("#UserFirstName").val("" + data.FirstName);
                $("#UserLastName").val("" + data.LastName);
                $("#UserEmail").val(data.UserEmail);
            }
        });

            $("#PartyTypeId").change(function () {
                var prtpId = $("#PartyTypeId").val();
                $("#ThemeId").empty();
                var json = { partyTypeId: prtpId };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetThemeByPartyType", "Reservations")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function(data) {
                        //$("#CityId").append('<option value=>Select...</option>');
                        $.each(data, function(key, value) {
                            $("#ThemeId").append('<option value=' + value.ThemeId + '>' + value.ThemeName + '</option>');
                        });
                        GetRentAndReservedDates();
                    }
                });

            });

        $("#ThemeId").change(function () {
            GetRentAndReservedDates();
        });

        $("#HallId").change(function () {
            GetRentAndReservedDates();
        });

        function GetRentAndReservedDates() {

            var thmId = $("#ThemeId").val();
            var prtpId = $("#PartyTypeId").val();
            var hlId = $("#HallId").val();
            var json = { themeId: thmId, partyTypeId: prtpId, hallId: hlId };
            $.ajax({
                type: "POST",
                url: '@Url.Action("CalculateTotalRent", "Reservations")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(json),
                success: function (data) {
                    $("#TotalRent").val("" + data);

                    json = { hallId: hlId }

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetReservedDates", "Reservations")',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(json),
                        success: function (dataArray) {
                            //$("#UserEmail").val("" + dataArray[0]);
                            if (dataArray.length == 0) {
                                disableddates = [""];
                            }
                            else
                            {
                                disableddates = dataArray;
                            }
                        }
                    });
                }
            });
        }

    });
</script>

}
