@model DreamPlanner_Main.Models.UserDefinedModels.Reservation

@{
    ViewBag.Title = "Create";
}

<div class="container">
    <div class="row margin-vert-30">
        <div class="col-md-6 col-md-offset-3 col-sm-offset-3">
            @using (Html.BeginForm("Create", "Reservations", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "signup-page", role = "form" }))
            {
                @Html.AntiForgeryToken()

                <div class="signup-header">
                    <h2>Reserve your party</h2>
                </div>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.Label("FirstName")
                <input id="UserFirstName" class="form-control margin-bottom-20" type="text" readonly="readonly" />

                @Html.Label("LastName")
                <input id="UserLastName" class="form-control margin-bottom-20" type="text" readonly="readonly" />

                @Html.Label("Email")
                <input id="UserEmail" class="form-control margin-bottom-20" type="text" readonly="readonly" />


                @Html.Label("Which type of party you want?")
                @Html.DropDownList("PartyTypeId", null, htmlAttributes: new { @class = "form-control margin-bottom-20" })
                @Html.ValidationMessageFor(model => model.Theme.PartyTypeId, "", new { @class = "text-danger" })

                @Html.LabelFor(model => model.ThemeId)
                @Html.DropDownList("ThemeId", null, htmlAttributes: new { @class = "form-control margin-bottom-20" })
                @Html.ValidationMessageFor(model => model.ThemeId, "", new { @class = "text-danger" })

                @Html.LabelFor(model => model.HallId)
                @Html.DropDownList("HallId", null, htmlAttributes: new { @class = "form-control margin-bottom-20" })
                @Html.ValidationMessageFor(model => model.HallId, "", new { @class = "text-danger" })

                @Html.LabelFor(model => model.ReservationDate)
                @Html.EditorFor(model => model.ReservationDate, new { htmlAttributes = new { @class = "form-control margin-bottom-20" } })
                @Html.ValidationMessageFor(model => model.ReservationDate, "", new { @class = "text-danger" })

                @Html.Label("Total Rent")
                <input id="TotalRent" class="form-control margin-bottom-20" type="text" readonly="readonly" />

                <hr>

                <h4>@ViewBag.ReservationMesg</h4>

                <div class="row">
                    <div class="col-lg-8">
                    </div>
                    <div class="col-lg-4 text-right">
                        <button class="btn btn-primary" type="submit">Reserve</button>
                    </div>
                </div>

            }

        </div>
    </div>


</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    $(document).ready(function () {

        var json = "";
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetUserInformation", "Reservations")',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(json),
            success: function (data) {
                $("#UserFirstName").val("" + data.FirstName);
                $("#UserLastName").val("" + data.LastName);
                $("#UserEmail").val(data.UserEmail);
            }
        });

            $("#PartyTypeId").change(function () {
                var prtpId = $("#PartyTypeId").val();
                $("#ThemeId").empty();
                var json = { partyTypeId: prtpId };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetThemeByPartyType", "Reservations")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function(data) {
                        //$("#CityId").append('<option value=>Select...</option>');
                        $.each(data, function(key, value) {
                            $("#ThemeId").append('<option value=' + value.ThemeId + '>' + value.ThemeName + '</option>');
                        });
                    }
                });
            });

        $("#ThemeId").change(function () {
            var thmId = $("#ThemeId").val();
            var prtpId = $("#PartyTypeId").val();
            var hlId = $("#HallId").val();
            $("#HallId").empty();
            var json = { themeId: thmId, partyTypeId: prtpId,  hallId: hlId};
            $.ajax({
                type: "POST",
                url: '@Url.Action("CalculateTotalRent", "Reservations")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(json),
                success: function (data) {
                    $("#TotalRent").val("" + data);
                }
            });
        });

        $("#HallId").change(function () {
            var thmId = $("#ThemeId").val();
            var prtpId = $("#PartyTypeId").val();
            var hlId = $("#HallId").val();
            var json = { themeId: thmId, partyTypeId: prtpId, hallId: hlId };
            $.ajax({
                type: "POST",
                url: '@Url.Action("CalculateTotalRent", "Reservations")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(json),
                success: function (data) {
                    $("#TotalRent").val("" + data);
                }
            });
        });

        @*$("#ReservationDate").change(function () {
            var selectedDate = $("#ReservationDate").val();
            $("#UserFirstName").val("Fuck you");
            var json = {hallId: 1, date: selectedDate}
            $.ajax({
                type: "POST",
                url: '@Url.Action("IsReserved", "Reservations")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(json),
                success: function (data) {
                    $("#UserFirstName").val("Fuck you");
                }
            });
        });*@
        });
</script>

}
